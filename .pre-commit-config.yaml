exclude: '\.idea/|\.vscode/'
minimum_pre_commit_version: 3.6.0
default_language_version:
  python: python3.11
  node: "20.10.0"
repos:
  # https://pre-commit.com/hooks.html
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-added-large-files
      - id: check-case-conflict
      - id: check-illegal-windows-names
      - id: check-json
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: check-symlinks
      - id: check-toml
      - id: check-xml
      - id: check-yaml
      - id: end-of-file-fixer
      - id: trailing-whitespace
        exclude_types: [tsv]
  # ruff
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.9.4
    hooks:
      - id: ruff-format
        args: ["--preview"]
        types_or: [python, pyi]
      - id: ruff
        name: ruff-isort
        args: ["--select", "I", "--fix"]
        types_or: [python, pyi]
      - id: ruff
        types_or: [python, pyi]
        args: ["--select", "W,E", "--output-format", "concise"]
  # pyright
  - repo: https://github.com/RobertCraigie/pyright-python
    rev: v1.1.393
    hooks:
      - id: pyright
  # markdownlint
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.44.0
    hooks:
      - id: markdownlint
        args: [
            "--disable",
            "MD013", # Line length
            "MD033", # Inline HTML
            "--", # otherwise files are interpreted as args
          ]
  # shellcheck
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        args: ["-x", "--shell=bash", "--color=always", "--format=gcc", "--"]
  # custom
  - repo: https://github.com/randolf-scholz/assorted-hooks.git
    rev: v0.5.56
    hooks:
      - id: check-separator-length-88
      - id: chktex
      - id: lacheck
        exclude: tests/
  - repo: local
    hooks:
      - id: replace-let-newcommandcopy
        name: 'Replace \let by \NewCommandCopy'
        description: 'Use \NewCommandCopy instead of \let'
        language: pygrep
        entry: '\\let\\'
        types: [tex]
        files: "^src/"
      - id: replace-def-newdocumentcommand
        name: 'Replace \def by \NewDocumentCommand'
        description: 'Use \NewDocumentCommand instead of \def'
        entry: '\\def\s*\{?\s*\\\w+\s*\{' # excludes \def\interal@command...
        language: pygrep
        types: [tex]
        files: "^src/"
      - id: replace-newcommand-newdocumentcommand
        name: 'Replace \newcommand by \NewDocumentCommand'
        description: 'Use \NewDocumentCommand instead of \newcommand'
        language: pygrep
        entry: '\\(|re)newcommand\b'
        types: [tex]
        files: "^src/"
      - id: replace-declarerobustcommand-newdocumentcommand
        name: 'Replace \DeclareRobustCommand by \NewDocumentCommand'
        description: 'Use \NewDocumentCommand instead of \DeclareRobustCommand'
        language: pygrep
        entry: '\\(DeclareRobustCommand|CheckCommand)\b'
        types: [tex]
        files: "^src/"
      - id: use-keyoptions
        name: "Check for legacy options usage"
        description: "Use modern keyval options, see usrguide.pdf"
        language: pygrep
        entry: '\\(DeclareOption|CurrentOption|OptionNotUsed|ProcessOptions|ExecuteOptions)\b'
        files: "^src/"
